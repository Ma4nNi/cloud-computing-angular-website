La tarea no esta conectada al api directamente. Utilize mocks.

Basicamente no tuve idea de como hacer requests mediante JS hacia el API de comicVine debido a problemas con CORS.
Termine creando mocks en mockable.io para calar todos los metodos y la logica que tenia , si luego me explicas como solucionarlo deberia de poder funcionar sin mayores modificaciones.
Los personajes son todos los de aqui: http://demo5292390.mockable.io/getDCBat
Las comparaciones siempre son entre deadpool y batroc: aqui sus links
  Deadpool:http://demo5292390.mockable.io/character/deadpool
  Batrock: http://demo5292390.mockable.io/character/batroc
Estos mocks son copy paste de respuestas que obtuve del api, pero enmockable puedo modificar los headers de CORS y asi no tuve ningun problema, igual en API gateway.



El plan era utilizar esta liga para obtener a los personajes- actualizandose cada que presionaras enter
http://comicvine.gamespot.com/api/characters/?api_key=3500994b89773681c6f41564eb101166f41caa34&format=json&field_list=id,name,api_detail_url&filter=name:"+event.name;

Donde event.name es el parametro de lo que esta escrito en el input de busqueda.
Eso me regresa  personajes en el siguiente formato:

"results": [
{
"api_detail_url": "https://comicvine.gamespot.com/api/character/4005-1529/",
"id": 1529,
"name": "Batroc"
},
{
"api_detail_url": "https://comicvine.gamespot.com/api/character/4005-1699/",
"id": 1699,
"name": "Batman"
},
{
"api_detail_url": "https://comicvine.gamespot.com/api/character/4005-2083/",
"id": 2083,
"name": "Battlewagon"
}
]

En el api_detail_url vienen marcados los enemigos y los volumenes en que ha aparecido el personaje en el siguiente formato:

"volume_credits": [
  {
  "api_detail_url": "https://comicvine.gamespot.com/api/volume/4050-1041/",
  "id": 1041,
  "name": "Picture Stories from American History",
  "site_detail_url": "https://comicvine.gamespot.com/picture-stories-from-american-history/4050-1041/"
  },
  {
  "api_detail_url": "https://comicvine.gamespot.com/api/volume/4050-12070/",
  "id": 12070,
  "name": "Dragon",
  "site_detail_url": "https://comicvine.gamespot.com/dragon/4050-12070/"
  }
]

y

"character_enemies": [
  {
  "api_detail_url": "https://comicvine.gamespot.com/api/character/4005-77621/",
  "id": 77621,
  "name": "666",
  "site_detail_url": "https://comicvine.gamespot.com/666/4005-77621/"
  },
  {
  "api_detail_url": "https://comicvine.gamespot.com/api/character/4005-28702/",
  "id": 28702,
  "name": "Ace",
  "site_detail_url": "https://comicvine.gamespot.com/ace/4005-28702/"
  }
]



Y despues es simplemente buscar duplicados. En los js se puede analizar la logica.
Estos archivos los utilize para pruebas con node, por eso la estructura es un poco distinta.

Elegi comparar deadpool y batroc porque son personajes con bastante historia, por lo que tendrian suficientes matches en ambas categorias.
Igual si me pudieras ayudar a solucionar lo de CORS seria genial. Solo tendria que cambiar los urls dentro del lambda y deberia de funcionar bien.


Otro problema que no tengo la menor idea de por que pasa y no encontre mucha ayuda en linea es que: Cuando cambio la lambda de comparar solo funciona una vez
depues de eso me regresa null, si modifico la lambda con un espacio y la guardo, vuelve a funcionar una vez... es muy raro.
 La lambda es mannpe-getCharacter
