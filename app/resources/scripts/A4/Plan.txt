Disculpe por dar una tarea un tanto diferente a lo que pediste, cuando vi que todos estaban cambiando de api ya tenia gran parte hecha ye investigada.

Basicamente no tuve idea de como hacer requests mediante JS hacia el API de comicVine debido a problemas con CORS.
Termine creando mocks en mockable.io para calar todos los metodos y la logica que tenia. Para no entregar nada


El plan era utilizar esta liga para obtener a los personajes- actualizandose cada que presionaras enter
http://comicvine.gamespot.com/api/characters/?api_key=3500994b89773681c6f41564eb101166f41caa34&format=json&field_list=id,name,api_detail_url&filter=name:"+event.name;

Donde event.name es el parametro de lo que esta escrito en el input de busqueda.
Eso me regresa  aperosnajes en el siguiente formato:

"results": [
{
"api_detail_url": "https://comicvine.gamespot.com/api/character/4005-1529/",
"id": 1529,
"name": "Batroc"
},
{
"api_detail_url": "https://comicvine.gamespot.com/api/character/4005-1699/",
"id": 1699,
"name": "Batman"
},
{
"api_detail_url": "https://comicvine.gamespot.com/api/character/4005-2083/",
"id": 2083,
"name": "Battlewagon"
}
]

En el api_detail_url vienen marcados los enemigos y los volumenes en que ha aparecido el personaje en el siguiente formato:

"volume_credits": [
  {
  "api_detail_url": "https://comicvine.gamespot.com/api/volume/4050-1041/",
  "id": 1041,
  "name": "Picture Stories from American History",
  "site_detail_url": "https://comicvine.gamespot.com/picture-stories-from-american-history/4050-1041/"
  },
  {
  "api_detail_url": "https://comicvine.gamespot.com/api/volume/4050-12070/",
  "id": 12070,
  "name": "Dragon",
  "site_detail_url": "https://comicvine.gamespot.com/dragon/4050-12070/"
  }
]

y

"character_enemies": [
  {
  "api_detail_url": "https://comicvine.gamespot.com/api/character/4005-77621/",
  "id": 77621,
  "name": "666",
  "site_detail_url": "https://comicvine.gamespot.com/666/4005-77621/"
  },
  {
  "api_detail_url": "https://comicvine.gamespot.com/api/character/4005-28702/",
  "id": 28702,
  "name": "Ace",
  "site_detail_url": "https://comicvine.gamespot.com/ace/4005-28702/"
  }
]



Y despues es simplemente buscar duplicados. En los js se ve mas  la logica.
Estos archivos los utilize para pruebas con node.

Elegi comparar deadpool y batroc porque son personajes con bastante historia, por lo que tendrian suficientes matches en ambas categorias.
Igual si me pudieras ayudar a solucionar lo de CORS seria genial. Solo tendria que cambiar los urls dentro del lambda y deberia de funcionar bien.


Otro problema que no tengo la menor idea de por que pasa y no encontre mucha ayuda en linea es que: Cuando cambio la lambda de comparar solo funciona una vez
depues de eso me regresa null, luego le agrego un espacio y vuelve a funcionar.. es muy raro.
